<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:column_transformation_logic="http://www.eclipse.org/column_transformation_logic" xmlns:cube_transformation_logic="http://www.eclipse.org/cube_transformation_logic" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:row_transformation_logic="http://www.eclipse.org/row_transformation_logic" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ecore:nsPrefix="cube_transformation_logic" ecore:package="cube_transformation_logic" targetNamespace="http://www.eclipse.org/cube_transformation_logic">
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="Ecore.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/row_transformation_logic" schemaLocation="row_transformation_logic.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/column_transformation_logic" schemaLocation="column_transformation_logic.xsd"/>
  <xsd:annotation>
    <xsd:documentation> This package describes the logic for cube transformations  

</xsd:documentation>
  </xsd:annotation>
  <xsd:annotation>
    <xsd:appinfo ecore:key="license" source="license">Copyright (c) 2020 Bird Software Solutions Ltd
 All rights reserved. This file and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v20.html

SPDX-License-Identifier: EPL-2.0 

 Contributors:
 Neil Mackenzie - initial API and implementation&#13;</xsd:appinfo>
  </xsd:annotation>
  <xsd:element ecore:ignore="true" name="CubeTransformationLogic" type="cube_transformation_logic:CubeTransformationLogic"/>
  <xsd:complexType name="CubeTransformationLogic">
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="columnFunctionGroup" type="column_transformation_logic:ColumnFunctionGroup"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="rowCreationApproachForCube" type="row_transformation_logic:RowCreationApproachForCube"/>
    </xsd:sequence>
    <xsd:attribute ecore:unsettable="false" name="usedInSubsets" type="ecore:EBoolean"/>
  </xsd:complexType>
</xsd:schema>
